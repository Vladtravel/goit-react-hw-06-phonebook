{"version":3,"sources":["components/ContactsList/ContactsList.module.css","redux/actions.js","components/ContactsList/ContactsList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","redux/reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","shortid","require","addContact","createAction","data","payload","id","generate","deleteContact","filterContact","ContactList","dispatch","useDispatch","contacts","useSelector","state","filter","items","normalizedFilter","toLowerCase","contact","name","includes","className","s","ListTable","map","number","type","onClick","onDeleteContact","ContactForm","useState","setName","setNumber","handleInputChange","e","currentTarget","value","Form","onSubmit","preventDefault","trim","alert","FormLabel","FormInput","onChange","Filter","event","target","App","itemContactReducer","createReducer","action","search","find","el","filtered","filterContactReducer","combineReducers","contactsPersistConfig","key","storage","blacklist","console","log","contactReducer","store","configureStore","reducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistore","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.7fceb28f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListTable\":\"ContactsList_ListTable__3jC1c\"};","import { createAction } from \"@reduxjs/toolkit\";\nconst shortid = require(\"shortid\");\n\nexport const addContact = createAction(\"contacts/add\", (data) => ({\n  payload: {\n    ...data,\n    id: shortid.generate(),\n  },\n}));\n\nexport const deleteContact = createAction(\"contacts/delete\");\n\nexport const filterContact = createAction(\"contacts/changeFilter\");\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { deleteContact } from \"../../redux/actions\";\nimport s from \"./ContactsList.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const onDeleteContact = (id) => dispatch(deleteContact(id));\n\n  const getContactList = (state) => {\n    const { filter, items } = state.contacts;\n    const normalizedFilter = filter.toLowerCase();\n\n    return items.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  const contacts = useSelector(getContactList);\n\n  return (\n    <table className={s.ListTable}>\n      <tbody>\n        {contacts.map(({ name, number, id }) => (\n          <tr key={id}>\n            <td>{name}</td>\n            <td>{number}</td>\n            <td>\n              <button type=\"button\" onClick={() => onDeleteContact(id)}>\n                delete\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default ContactList;\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addContact } from \"../../redux/actions\";\nimport s from \"./ContactForm.module.css\";\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const handleInputChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.trim() === \"\" || number.trim() === \"\") {\n      alert(\"Fill all fields!\");\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={s.Form} onSubmit={handleSubmit}>\n      <label className={s.FormLabel}>\n        Name\n        <input\n          className={s.FormInput}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n        />\n      </label>\n      <label className={s.FormLabel}>\n        Number\n        <input\n          className={s.FormInput}\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useDispatch } from \"react-redux\";\nimport { filterContact } from \"../../redux/actions\";\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const onFilter = (event) => dispatch(filterContact(event.target.value));\n\n  return (\n    <label>\n      <input type=\"text\" name=\"filter\" onChange={onFilter} />\n    </label>\n  );\n};\n\nexport default Filter;\n","import ContactList from \"./components/ContactsList/ContactsList\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <p className=\"App-find\">Find contacts by name</p>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\n\nimport { addContact, deleteContact, filterContact } from \"./actions\";\n\nconst itemContactReducer = createReducer([], {\n  [addContact.type]: (state, action) => {\n    const search = state.find(\n      (el) => el.name.toLowerCase() === action.payload.name.toLowerCase()\n    );\n    if (search) {\n      alert(`${search.name} is already in contacts.`);\n      return;\n    }\n    return [...state, action.payload];\n  },\n  [deleteContact.type]: (state, action) => {\n    const filtered = state.filter((el) => el.id !== action.payload);\n    return [...filtered];\n  },\n});\n\nconst filterContactReducer = createReducer(\"\", {\n  [filterContact.type]: (state, action) => action.payload,\n});\n\nexport default combineReducers({\n  items: itemContactReducer,\n  filter: filterContactReducer,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport contactReducer from \"./reducers\";\n\nconst contactsPersistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\nconsole.log(contactReducer);\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactReducer),\n  },\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  devTools: process.env.NODE_ENV !== \"production\",\n});\n\nconst persistor = persistStore(store);\n\nconst persistore = { store, persistor };\n\nexport default persistore;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__3eMea\",\"FormLabel\":\"ContactForm_FormLabel__1ztrV\",\"FormInput\":\"ContactForm_FormInput__1n_bL\"};"],"sourceRoot":""}